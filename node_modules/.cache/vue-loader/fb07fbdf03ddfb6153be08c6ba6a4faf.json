{"remainingRequest":"D:\\project\\automationPlatformVue\\autoplatform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\automationPlatformVue\\autoplatform\\src\\views\\home\\menu.vue?vue&type=style&index=0&id=32f65c65&scoped=true&lang=css&","dependencies":[{"path":"D:\\project\\automationPlatformVue\\autoplatform\\src\\views\\home\\menu.vue","mtime":1605840557255},{"path":"D:\\project\\automationPlatformVue\\autoplatform\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\automationPlatformVue\\autoplatform\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\project\\automationPlatformVue\\autoplatform\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\project\\automationPlatformVue\\autoplatform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\automationPlatformVue\\autoplatform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI2luZGV4LW1lbnUgew0KICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsNCn0NCg=="},{"version":3,"sources":["menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA","file":"menu.vue","sourceRoot":"src/views/home","sourcesContent":["*@Author: hao.ling\r\n*@Date: 2020/11/19 16:09\r\n*@Annotation: 菜单栏\r\n\r\n<template>\r\n  <div id=\"index-menu\">\r\n    <a-menu mode=\"inline\" :open-keys=\"openKeys\" @openChange=\"openChange\">\r\n      <a-sub-menu v-for=\"menu in menu_list\" :key=\"menu.key\">\r\n        <span slot=\"title\"><my-icon :type=\"menu.icon\"/><span>{{ menu.name }}</span></span>\r\n        <a-menu-item v-for=\"item in menu.menu_item\" :key=\"item.key\">\r\n          <my-icon :type=\"item.icon\"/>\r\n          <span @click=\"goto(item.path)\">{{ item.name }}</span>\r\n        </a-menu-item>\r\n      </a-sub-menu>\r\n      <a-menu-item v-for=\"list in subMenu_list\" :key=\"list.key\">\r\n        <my-icon :type=\"list.icon\"/>\r\n        <span @click=\"goto(list.path)\">{{ list.name }}</span>\r\n      </a-menu-item>\r\n    </a-menu>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"menuList\",\r\n  data() {\r\n    return {\r\n      openKeys: [],\r\n      rootSubmenuKeys: [],\r\n      menu_list: [\r\n        {\r\n          key: \"sub1\", icon: \"icon-peizhi\", name: \"配置中心\", menu_item: [{\r\n            key: \"/system/list\", icon: \"icon-xitongpeizhi\", name: \"系统配置\",\r\n            path: {name: \"systemList\"}\r\n          }, {\r\n            key: \"/databaseConfig/list\", icon: \"icon-data\", name: \"数据库配置\",\r\n            path: {name: \"databaseConfigList\"}\r\n          }, {\r\n            key: \"/environmentConfig/list\", icon: \"icon-shujutansuohuanjingpeizhi\", name: \"环境配置\",\r\n            path: {name: \"environmentConfigList\"}\r\n          }]\r\n        }, {\r\n          key: \"sub2\", name: \"测试用例\", icon: \"icon-test-case-group\", menu_item: [{\r\n            key: \"/functionalCase/list\", icon: \"icon-mokuai\", name: \"功能测试用例\",\r\n            path: {name: \"functionalCaseList\"}\r\n          }, {\r\n            key: \"/interfaceCase/list\", icon: \"icon-jiekou1\", name: \"接口测试用例\",\r\n            path: {name: \"interfaceCaseList\"}\r\n          }, {\r\n            key: \"/automatedCase/list\", icon: \"icon-xiaoshouzidonghua\",\r\n            name: \"自动化测试用例\", path: {name: \"automatedCaseList\"}\r\n          }]\r\n        }, {\r\n          key: \"sub3\", name: \"自动化测试\", icon: \"icon-xinicon_huabanfuben\", menu_item: [{\r\n            key: \"/UIAutomation/list\", icon: \"icon-uicn\", name: \"UI自动化测试\",\r\n            path: {name: \"uiAutomationList\"}\r\n          }, {\r\n            key: \"/interfaceAutomation/list\", icon: \"icon-jiekou\", name: \"接口自动化测试\",\r\n            path: {name: \"interfaceAutomationList\"}\r\n          }]\r\n        }, {\r\n          key: \"sub4\", name: \"覆盖率\", icon: \"icon-tongji\", menu_item: [{\r\n            key: \"/functionalCoverage/list\", icon: \"icon-tongji1\", name: \"UI自动化覆盖率\",\r\n            path: {name: \"functionalCoverageList\"}\r\n          }, {\r\n            key: \"/interfaceCoverage/list\", icon: \"icon-tongji2\", name: \"接口自动化覆盖率\",\r\n            path: {name: \"interfaceCoverageList\"}\r\n          }]\r\n        }, {\r\n          key: \"sub5\", name: \"测试报告\", icon: \"icon-REPORT\", menu_item: [{\r\n            key: \"/functionalReport/list\", icon: \"icon-report\", name: \"UI测试报告\",\r\n            path: {name: \"functionalReportList\"}\r\n          }, {\r\n            key: \"/interfaceReport/list\", icon: \"icon-Report\", name: \"接口测试报告\",\r\n            path: {name: \"interfaceReportList\"}\r\n          }]\r\n        }\r\n      ],\r\n      subMenu_list: [{\r\n        key: \"/mobile/platform\", icon: \"icon-mobile\", name: \"手机测试平台\", path: {name: \"mobilePlatform\"}\r\n      }, {\r\n        key: \"/mockData/platform\", icon: \"icon-data\", name: \"mock数据平台\", path: {name: \"mockPlatform\"}\r\n      }]\r\n    }\r\n  },\r\n  created() {\r\n    this.getMenuList()\r\n  },\r\n  methods: {\r\n    // 展开当前菜单\r\n    openChange(openKeys) {\r\n      const latestOpenKey = openKeys.find(key => this.openKeys.indexOf(key) === -1);\r\n      this.rootSubmenuKeys.indexOf(latestOpenKey) === -1 ? this.openKeys = openKeys : this.openKeys = latestOpenKey ? [latestOpenKey] : []\r\n    },\r\n    // 获取subKey\r\n    getMenuList() {\r\n      this.rootSubmenuKeys = []\r\n      this.menu_list.map((item) => {\r\n        this.rootSubmenuKeys.push(item['key'])\r\n      })\r\n    },\r\n    // 菜单跳转\r\n    goto(value) {\r\n      this.$router.push(value)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#index-menu {\r\n  border: 1px solid black;\r\n}\r\n</style>"]}]}